---
- name: Install Kubernetes on cluster nodes
  hosts: master, worker
  become: yes
  tasks:
    - name: Update APT cache
      apt:
        update_cache: yes
      when: ansible_os_family == 'Debian'

    - name: Install prerequisite packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - docker.io
        - apt-transport-https
        - curl
      when: ansible_os_family == 'Debian'

    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Add Kubernetes APT key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg

    - name: Add Kubernetes APT repository
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Update APT cache after adding Kubernetes repository
      apt:
        update_cache: yes

    - name: Install Kubernetes components
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - kubelet
        - kubectl
        - kubeadm
        - kubernetes-cni
      when: ansible_os_family == 'Debian'

    - name: Disable swap memory
      shell: swapoff -a
      ignore_errors: yes

    - name: Configure Iptables for Bridged Traffic
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
        state: present
      ignore_errors: yes

    - name: Restart and enable Docker
      systemd:
        name: docker
        enabled: yes
        state: restarted

    - name: Initialize Kubernetes on the master node
      shell: kubeadm init --pod-network-cidr=10.0.0.0/16
      when: inventory_hostname in groups['master']
      register: kubeadm_output

    - name: Create .kube directory on the master node
      file:
        path: "$HOME/.kube"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'
      when: inventory_hostname in groups['master']

    - name: Copy Kubernetes admin.conf to user's .kube directory
      copy:
        src: /etc/kubernetes/admin.conf
        dest: "$HOME/.kube/config"
        remote_src: yes
      when: inventory_hostname in groups['master']

    - name: Allow communication on port 6443
      ufw:
        rule: allow
        port: 6443
      when: inventory_hostname in groups['master']

    - name: Get join command from the master node
      delegate_to: master
      shell: kubeadm token create --print-join-command
      register: output

    - name: Set join command as a fact
      delegate_to: master
      set_fact:
        join_command: "{{ output.stdout_lines[0] }}"

    - name: Print joinkey
      delegate_to: master
      debug:
        msg: "{{ join_command }}"

    - name: Join worker nodes to the cluster
      shell: "{{ join_command }}"
      when: inventory_hostname in groups['worker']

    - name: Deploy Flannel network on the master node
      shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
      when: inventory_hostname in groups['master']

     - name: Wait for Kubernetes nodes to be ready
       wait_for:
         timeout: 60
         delay: 10
         host: "{{ item }}"
         port: 6443
       with_items: "{{ groups['master'] }}"
       when: inventory_hostname in groups['worker']

    - name: Get pods data
      command: kubectl get pods --all-namespaces
      register: pods
      ignore_errors: yes
      changed_when: false

    - name: Display pods status
      debug:
        var: pods.stdout_lines

    - name: Get Nodes Data
      command: kubectl get nodes
      register: nodes
      ignore_errors: yes
      changed_when: false

    - name: Display Nodes status
      debug:
        var: nodes.stdout_lines
